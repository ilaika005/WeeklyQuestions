To solve this, we just need to find the total number of books Moshe will earn for each possible value of K from 1 to M.

If K=1, then Moshe gets 0 books.

If K>1 and K is a factor of N, then Moshe will get all books in the boxes with indices that are multiples of K.

If K is not coprime to N, then Moshe can only possibly get the books in the boxes with indices that are multiples of a factor of N greater than 1, which is already covered by the case above, so this is always not optimal.

Then, that leaves us with the case where K>1 and K is coprime to N. Notice that in this case, Moshe will access each box exactly once.

For this case, consider the sequence of indices of the boxes accessed by Moshe. We can group this sequence into exactly K groups, where each group consists of a sequence of indices c, c+K, c+2K, c+3K, and so on for some value 1≤c≤K. For each group, while Moshe is accessing the boxes in the group, at the same time, Jacob is accessing boxes d, d+1, d+2, d+3, and so on for some value d.

For this case, since K>1, that means at some point, Moshe will overtake Jacob in the index of the box he accesses. That happens once c+K×p>d+p for some p≥0. From that point on, Moshe will get all books in the boxes he accesses in that group. The number of books earned by Moshe in each group can be calculated in O(1) using simple math and using the formula for the sum of an arithmetic sequence.

The total time complexity to calculate for a single value of K is O(K), so the total time complexity is O(M2).

Time complexity: O(M2)